{"version":3,"sources":["../../12-food_menu/src/reducers/foodReducers.js","../../12-food_menu/src/reducers/index.js","../../12-food_menu/src/actions/types.js","../../12-food_menu/src/store.js","../../12-food_menu/src/components/layout/Navbar.js","../../12-food_menu/src/components/layout/About.js","../../12-food_menu/src/actions/foodActions.js","../../12-food_menu/src/components/menus/Menu.js","../../12-food_menu/src/components/menus/Menus.js","../../12-food_menu/src/App.js","../../12-food_menu/src/serviceWorker.js","../../12-food_menu/src/index.js"],"names":["initialState","menu","restaurantInfo","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","payload","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","Navbar","react_default","a","createElement","className","react_router_dom","to","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","About","this","props","getRestaurantData","src","logo","alt","name","address","avg_delivery_time","deliverable_area","map","area","key","concat","delivery_fee","minimum_order_price","open_status","payment_methods","method","style","justifyContent","height","connect","dispatch","axios","get","then","res","data","Menu","item","menu_items","menuItem","sub_items","price","value","class","Menus","getMenu","menuitems","menus_Menu","App","react_redux_es","Navbar_Navbar","react_router","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c010b3a0.chunk.js","sourcesContent":["import { GET_MENU, GET_RESTAURANT_DATA } from \"../actions/types\";\n\nconst initialState = {\n  menu: \"\",\n  restaurantInfo: \"\"\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_MENU:\n      //   console.log(action.payload);\n      return {\n        ...state,\n        menu: action.payload\n      };\n\n    case GET_RESTAURANT_DATA:\n      //   console.log(action.payload);\n      return {\n        ...state,\n        restaurantInfo: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport foodReducers from \"./foodReducers\";\n\nexport default combineReducers({\n  menu: foodReducers\n});\n","export const GET_MENU = \"GET_MENU\";\nexport const GET_RESTAURANT_DATA = \"GET_RESTAURANT_DATA\";\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Navbar extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n        <Link to=\"/\" className=\"navbar-brand\" href=\"!#\">\n          Navbar\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item active\">\n              <Link to=\"/\" className=\"nav-link\" href=\"!#\">\n                Home <span className=\"sr-only\">(current)</span>\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"about\" className=\"nav-link\" href=\"!#\">\n                About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { getRestaurantData } from \"../../actions/foodActions\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass About extends Component {\n  componentDidMount() {\n    this.props.getRestaurantData();\n  }\n  render() {\n    const { restaurantInfo } = this.props;\n    // console.log(restaurantInfo);\n    if (!restaurantInfo) {\n      return (\n        <div\n          className=\"row\"\n          style={{ justifyContent: \"center\", height: \"100vh\" }}\n        >\n          <img\n            src=\"https://freepreloaders.com/wp-content/uploads/2019/05/bars.svg\"\n            alt=\"Loader\"\n          />\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <h1 className=\"display-4 text-danger\">About Us</h1>\n          <div className=\"row my-3\">\n            <div className=\"col-12 col-sm-12 col-md-3\">\n              <img src={restaurantInfo.logo} alt=\"\" />\n            </div>\n            <div className=\"col-12 col-sm-12 col-md-9\">\n              <h3>{restaurantInfo.name}</h3>\n              <p>{restaurantInfo.address}</p>\n              <p>Average Delivery Time: {restaurantInfo.avg_delivery_time}</p>\n            </div>\n          </div>\n          <div className=\"row my-3\">\n            <div className=\"col-12\">\n              <h4>Delivery Details:</h4>\n              <p>\n                <b>Deliverable Area:</b>{\" \"}\n                {restaurantInfo.deliverable_area.map(area => {\n                  return <span key={area.id}>{`${area.name}, `}</span>;\n                })}\n              </p>\n              <p>\n                <b>Delivery fee: </b>\n                <span>&#8377;</span>\n                {restaurantInfo.delivery_fee}\n              </p>\n              <p>\n                <b>Minimum order: </b>\n                <span>&#8377;</span>\n                {restaurantInfo.minimum_order_price}\n              </p>\n              <p>\n                <b>Open for order: </b>\n                {restaurantInfo.open_status === \"1\" ? (\n                  <span>Yes</span>\n                ) : (\n                  <span>No</span>\n                )}\n              </p>\n              <p>\n                <b>Payment methods:</b>{\" \"}\n                {restaurantInfo.payment_methods.map(method => {\n                  return <span key={method.id}>{`${method.type}, `}</span>;\n                })}\n              </p>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nAbout.propTypes = {\n  //   restaurantinfo: PropTypes.string.isRequired\n  getRestaurantData: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  restaurantInfo: state.menu.restaurantInfo\n});\n\nexport default connect(\n  mapStateToProps,\n  { getRestaurantData }\n)(About);\n","import { GET_MENU, GET_RESTAURANT_DATA } from \"./types\";\nimport axios from \"axios\";\n\n// const url = `https://todo-2cace.firebaseio.com/foodmenu/categories.json`;\n\nexport const getMenu = () => dispatch => {\n  axios.get(`https://todo-2cace.firebaseio.com/categories.json`).then(res => {\n    //   console.log(res.data);\n    dispatch({\n      type: GET_MENU,\n      payload: res.data\n    });\n  });\n};\n\nexport const getRestaurantData = () => dispatch => {\n  axios\n    .get(`https://todo-2cace.firebaseio.com/restaurant-info.json`)\n    .then(res => {\n      //   console.log(res.data);\n      dispatch({\n        type: GET_RESTAURANT_DATA,\n        payload: res.data\n      });\n    });\n};\n","import React, { Component } from \"react\";\n\nclass Menu extends Component {\n  render() {\n    // console.log(this.props.item);\n    const { item } = this.props;\n    return (\n      <div className=\"menu-container\">\n        <div className=\"menu-list\">\n          {<h5 className=\"\">{item.name}</h5>}\n          <ol className=\"menu\">\n            {item.menu_items.map(menuItem => {\n              return (\n                <li key={menuItem.id} className=\"my-2\">\n                  <div>\n                    <p className=\"m-0\">\n                      <i>{menuItem.name}</i>\n                    </p>\n                    <p className=\"m-0\">\n                      <i>\n                        <span>&#8377;</span> {menuItem.sub_items[0].price}\n                      </i>\n                    </p>\n                  </div>\n                  <div className=\"add-to-cart\">\n                    <input\n                      type=\"button\"\n                      value=\"Add\"\n                      className=\"btn btn-success add-btn\"\n                    />\n                    <button className=\"btn prod-item-count\">\n                      <i class=\"fas fa-minus\" />\n                      <span>1</span>\n                      <i class=\"fas fa-plus\" />\n                    </button>\n                  </div>\n                </li>\n              );\n            })}\n          </ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Menu;\n","import React, { Component } from \"react\";\nimport { getMenu } from \"../../actions/foodActions\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Menu from \"./Menu\";\n\nclass Menus extends Component {\n  componentDidMount() {\n    this.props.getMenu();\n  }\n  render() {\n    let { menuitems } = this.props;\n    // console.log(menuitems);\n    if (!menuitems) {\n      return (\n        <div\n          className=\"row\"\n          style={{ justifyContent: \"center\", height: \"100vh\" }}\n        >\n          <img\n            src=\"https://freepreloaders.com/wp-content/uploads/2019/05/bars.svg\"\n            alt=\"Loader\"\n          />\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <h1 className=\"display-4 text-danger\">Menu</h1>\n          {menuitems.map(item => {\n            return <Menu key={item.id} item={item} />;\n          })}\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  menuitems: state.menu.menu\n});\n\nexport default connect(\n  mapStateToProps,\n  { getMenu }\n)(Menus);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n//Components\nimport Navbar from \"./components/layout/Navbar\";\nimport About from \"./components/layout/About\";\nimport Menus from \"./components/menus/Menus\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div>\n            <Navbar />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Menus} />\n                <Route exact path=\"/about\" component={About} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}